<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rg171.music.mapper.CommentMapper">
    <resultMap id="BaseResultMap" type="com.rg171.music.entity.Comment">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="song_id" property="songId" jdbcType="INTEGER"/>
        <result column="song_list_id" property="songListId" jdbcType="INTEGER"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="type" property="type" jdbcType="TINYINT"/>
        <result column="up" property="up" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, user_id, song_id, song_list_id, content, create_time, type, up
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        from comment
        where id = #{id}
    </select>

    <select id="allComment" resultMap="BaseResultMap">
        select *
        from comment
    </select>

    <select id="commentOfSongId" resultMap="BaseResultMap">
        select *
        from comment
        where song_id = #{songId}
    </select>

    <select id="commentOfSongListId" resultMap="BaseResultMap">
        select *
        from comment
        where song_list_id = #{songListId}
    </select>

    <delete id="deleteComment" parameterType="java.lang.Integer">
        delete from comment
        where id = #{id}
    </delete>

    <insert id="insert" parameterType="com.rg171.music.entity.Comment">
        insert into comment (id, user_id, song_id,
        song_list_id, content, create_time,
        type, up)
        values (#{id}, #{userId}, #{songId},
        #{songListId}, #{content}, #{createTime},
        #{type}, #{up})
    </insert>

    <insert id="insertSelective" parameterType="com.rg171.music.entity.Comment">
        insert into comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="songId != null">
                song_id,
            </if>
            <if test="songListId != null">
                song_list_id,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="up != null">
                up,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="userId != null">
                #{userId},
            </if>
            <if test="songId != null">
                #{songId},
            </if>
            <if test="songListId != null">
                #{songListId},
            </if>
            <if test="content != null">
                #{content},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="type != null">
                #{type},
            </if>
            <if test="up != null">
                #{up},
            </if>
        </trim>
    </insert>

    <update id="updateCommentMsg" parameterType="com.rg171.music.entity.Comment">
        update comment
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="songId != null">
                song_id = #{songId},
            </if>
            <if test="songListId != null">
                song_list_id = #{songListId},
            </if>
            <if test="content != null">
                content = #{content},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="up != null">
                up = #{up},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.rg171.music.entity.Comment">
        update comment
        set user_id = #{userId},
        song_id = #{songId},
        song_list_id = #{songListId},
        content = #{content},
        create_time = #{createTime},
        type = #{type},
        up = #{up}
        where id = #{id}
    </update>
</mapper>
